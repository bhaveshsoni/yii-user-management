#summary Tutorial for installing and configuring the Yii User Management.
#labels Featured,Phase-Deploy

<wiki:toc max_depth="1" />

= Introduction =

Tutorial for installing and configuring the Yii User Management 
Module under a fresh skeleton Application generated by yiic

= Installation steps =

Installing the User Management Module is very easy due to the
great module System of the Yii Framework and the Installer provided
by the Module. In this Tutorial we will learn how to use the User
Management Module on a fresh created Yii Web Application.

To get Yii User Management module up and running follow these steps:

== Generate your Webapp ==

Generate your web app using the yiic command:

{{{
$ php yii-1.1.5/framework/yiic webapp testdrive
Create a Web application under '/var/www/testdrive'? [Yes|No] Yes

[...]
}}}

Your application has been created successfully under /var/www/testdrive.

== Download and extract Yii ==

Extract the Yii User Management Module under the modules/ directory
of your new Web Application. Replace the _0.8 with the latest Version
available.

{{{
$ cd testdrive/protected
$ mkdir modules
$ cd modules
$ wget http://www.yiiframework.com/extension/yii-user-management/files/User_Management_Module_0.8.tar.bz2
$ tar xvf User_Management_Module_0.8.tar.bz2
}}}

== Activate module ==

Add the Module to your Application Configuration

{{{
$ [youreditor] protected/config/main.php
}}}

Add these linesin your Application Configuration (protected/config/main.php):

{{{
'modules' => array(
		'user' => array(
			'debug' => true,
			)
		),
}}}

The debug option is needed for the installation and will be set to false after the installation.

== Prepare a database connection ==

The Yii User Management Module needs a Database Connection to work. You 
now have to setup your SQlite or MySQL Database and insert the connection
URI in your Application configuration, like this:

{{{
'db'=>array(
		'connectionString' => 'mysql:host=localhost;dbname=testdrive',
		'emulatePrepare' => true,
		'username' => 'root',
		'password' => '',
		'charset' => 'utf8',
		'tablePrefix' => '',
	   ),
}}}

Please note that it can be important to set the tablePrefix to '' even if 
you don't use an prefix cause yii seems to behave awkward without that
sometimes.

{{{    
$ mysql -u root localhost    
> CREATE DATABASE `testdrive` ;
}}}

== Override the default auth method ==

To let your Web Application use the Authentification Methods of
the User Management Module, we need to overwrite the default 
Authentification Method in the Application Configuration:

{{{
 'components'=>array(
 'user'=>array(
      'class' => 'application.modules.user.components.YumWebUser',
      'allowAutoLogin'=>true,
      'loginUrl' => array('//user/user/login'),
      [...]
    ),
}}}

{{{
 'import'=>array(  
  'application.modules.user.models.*',

  [...]
}}} 

This tells our Web Application that is can access the Model 'User'
even when not in the modules/user environment. This is needed for calling
User::hasRole($role) in your Code to check if the logged in User belongs to the
role. This is explained in the detailed Documentation. It is good to let this 
line occur as the first included Model, so you can extend the User-Model with 
your own in your Application models/ Directory if you like.

== Run Web Installer ==

Run the User Management Installer in your Web-Browser:

{{{
http://localhost/testdrive/index.php/user/install
}}}

or

{{{
http://localhost/testdrive/index.php?r=user/install
}}}

depending on your URL route setup. 

Now the Installer of the User Management Module should appear.
To the right you can set up alternate Table Names used by the
Module. In most cases this is not needed and you can keep this 
Settings. If you do change this, be sure to set up the correct table
Names in your Application Configuration, so the User Module can access
them.

Click 'Install Module':

Congratulations, you have installed the User Management Module !

= Using the Yii User Management Module =

8.) Click on "Administrate your Users"
Now you are taken to the default Front-End Login-Screen of the User 
Management Module. Log in with the Username admin and Password admin.

9.) Click on the 'update Icon' (the pencil) of your administrator User.
Change the Password to something more safe than 'admin'. Click Save.

10.) Remove the 'debug' => 'true' line from your Application Configuration
so your new data doesn't get overwritten accidentally by the installation
process.

Configuration of your freshly installed User Management Module:

= Language suppoort =

The Yii-User Management Module uses the language that is set in
the Application Configuration. If you want, you can add a 

{{{
'language' => 'de',
}}}

in your config/main.php to get German Language strings. French and
Russian are available, but not every string is translated at the time
of this writing. Spanish is also on its way.

= Quick Login Widget: =
If you want to display a quick login widget somewhere in your Web Application,
just call in your view file:

{{{
<?php $this->widget('application.modules.user.components.LoginWidget'); ?>
}}}

= Password Requirements =
You can setup the password Requirements within the 'passwordRequirements' 
option of the Module, for example:

{{{
 'user' => array(
        'passwordRequirements' => array(                                        
          'minLen' => 4,
          'maxLen' => 16,
          'maxRepetition' => 2,
          'minDigits' => 3,
          ),
}}}

Please see components/CPasswordValidator.php for possible password 
requirement options.

= User Registration =

Set the Variable 'disableEmailActivation' in the module configuration to 
let users be able to register to your Application without Registration.

= Role Management =

You can add up new roles in the Role Manager. To check for access
to this roles, you can use this code Snippet everywhere in your
Yii Application. Most likely it will be used in the ACL Filter of
your Controllers:

{{{
if(Yii::app()->user->hasRole('role'))
{
 // user is allowed
}
else
{
 // user is not allowed to do this
}
}}}

Note, that you can assign several Roles to a user holding your CTRL key
in the Listbox. This will be changed to a two-pane view (like in srbac)
in a later Version.

= Tracing =
since yum 0.8 the login, logout and registration of users will be traced to
the log level 'info'.

Wrong login attempts will always be logged to the log info 'warning' so
a admin can get informed when too many wrong attempts are made for a 
specific user. Please see the Yii documentation about logging on how to
configure logging into files, the database, on screen or via e-mail.

= Available Application Configuration Parameters =

== Version number of the Module ==
{{{
$version = '0.8';
}}}
== Whether the Module is in Debug mode ==

{{{
$debug = false; 
}}}

== Table Names ==

{{{
$usersTable = "{{users}}";
$messagesTable = "{{messages}}";
$profileFieldsTable = "{{profile_fields}}";
$profileTable = "{{profiles}}";
$rolesTable = "{{roles}}";
$userRoleTable = "{{user_has_role}}";
}}}

== Whether there be installed or not the demo data ==

{{{
$installDemoData = true;
}}}

== Layout ==

  The Layout used. This is the default Layout of the skeleton App.
  Replace it with the used layout of your Web Application:
{{{
$layout = 'column2';
}}}

== Type of Login ==

Since Version 0.4 you can define whether the user can login 
with his username, his E-Mail address or both with the 'loginType' 
attribute like this:

{{{
   0: Allow login only by Username
   1: Allow login only by E-Mail
   2: Allow login by E-Mail or Username
   3: Allow login only by OpenID 
}}}

OpenID will be implemented in further Versions.